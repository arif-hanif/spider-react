{"version":3,"sources":["reducers/gbmxl.js","components/BottomNav.js","actions/gbmxl.js","components/Renderer.js","components/SwitchGroup.js","components/DrawerFunction.js","components/AppBar.js","components/UploadDialog.js","App.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["gbXMLDefaultState","surfaceMeshes","surfaceEdges","surfaceOpenings","string","gbmxl","state","arguments","length","undefined","action","type","Object","objectSpread","defineProperty","toggle","name","bool","LabelBottomNavigation","value","upload","handleChange","event","_this","setState","classes","this","props","react_default","a","createElement","BottomNavigation_default","onChange","className","background","Paper_default","absolute","elevation","BottomNavigationAction_default","label","icon","Restore_default","Favorite_default","LocationOn_default","Icon_default","onClick","toggleUpload","React","Component","withStyles","theme","backgroundColor","position","zIndex","bottom","spacing","unit","toggleState","Scene","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","zoomObjectBoundingSphere","obj","sphere","THREE","setFromObject","getBoundingSphere","center","radius","controls","reset","target","copy","maxDistance","camera","clone","add","far","updateProjectionMatrix","lightDirectional","shadow","scale","set","axesHelper","scene","userData","start","bind","assertThisInitialized","stop","animate","defaultgbXML","sceneRotation","cameraHelper","width","window","innerWidth","height","innerHeight","prevProps","prevState","snapshot","console","log","specificProperty","axios","get","response","gbxmlString","data","dispatch","gbxmlToThree","_this$state$surfaceMe","_this$state$surfaceEd","_this$state$surfaceOp","gbxml","gbXMLJson","gbXMLParser","parseFileXML","apply","toConsumableArray","threeGenerator","getSurfaceMeshes","getSurfaceEdges","getOpenings","mount","clientWidth","clientHeight","up","renderer","alpha","antialias","lightAmbient","mapSize","castShadow","lightPoint","z","setSize","shadowMap","enabled","OrbitControls","OrbitControlsDef","domElement","autoRotate","loadDefaultFile","children","update","appendChild","removeChild","frameId","requestAnimationFrame","cancelAnimationFrame","remove","renderScene","render","_this2","style","left","top","concat","ref","status","connect","toggleMeshes","e","checked","toggleEdges","toggleOpenings","_ref","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","Typography_default","ExpansionPanelDetails_default","List_default","ListItem_default","FormControlLabel_default","control","Switch_default","root","display","appBar","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","withTheme","open","Drawer_default","anchor","paper","onClose","toggleDrawer","IconButton_default","direction","ChevronLeft_default","ChevronRight_default","Divider_default","SwitchGroup","flexGrow","grow","menuButton","marginLeft","marginRight","AppBar_default","Toolbar_default","color","aria-label","Menu_default","variant","FormDialog","file","handleFileRead","preventDefault","files","reader","FileReader","readAsArrayBuffer","onload","result","decoder","TextDecoder","decode","Dialog_default","aria-labelledby","DialogTitle_default","id","onSubmit","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","store","createStore","combineReducers","gbxmlReducer","__REDUX_DEVTOOLS_EXTENSION__","App","es","CssBaseline_default","components_AppBar","DrawerFunction","Renderer","BottomNav","UploadDialog_FormDialog","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mRAEMA,EAAoB,CACxBC,eAAe,EACfC,cAAc,EACdC,iBAAiB,EACjBC,OAAQ,MAGKC,EAAA,WAAuC,IAAtCC,EAAsCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA9BP,EAAmBU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOC,MACb,IAAK,SACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADLM,OAAAE,EAAA,EAAAF,CAAA,GAEGF,EAAOK,OAAOC,KAAON,EAAOK,OAAOE,OAGxC,IAAK,cACH,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEF,OAAQM,EAAON,SAGnB,QACE,OAAOE,wICFPY,6MACJZ,MAAQ,CACNa,MAAO,UACPC,QAAQ,KAGVC,aAAe,SAACC,EAAOH,GACrBI,EAAKC,SAAS,CAAEL,mFAGT,IACCM,EAAYC,KAAKC,MAAjBF,QACAN,EAAUO,KAAKpB,MAAfa,MAER,OACES,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAkBV,MAAOA,EAAOa,SAAUN,KAAKL,aAAcY,UAAWR,EAAQS,YAC9EN,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAOI,UAAWR,EAAQW,SAAUC,UAAW,GAC7CT,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAwBU,MAAM,UAAUpB,MAAM,UAAUqB,KAAMZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,QAC9DD,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAwBU,MAAM,YAAYpB,MAAM,YAAYqB,KAAMZ,EAAAC,EAAAC,cAACY,EAAAb,EAAD,QAClED,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAwBU,MAAM,SAASpB,MAAM,SAASqB,KAAMZ,EAAAC,EAAAC,cAACa,EAAAd,EAAD,QAC5DD,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CAAwBU,MAAM,SAASpB,MAAM,SAASqB,KAAMZ,EAAAC,EAAAC,cAACc,EAAAf,EAAD,eAAqBgB,QAASnB,KAAKC,MAAMmB,wBApB3EC,IAAMC,WA+B3BC,uBA1CA,SAAAC,GAAK,MAAK,CACvBhB,WAAY,CACViB,gBAAiB,WAEnBf,SAAU,CACRgB,SAAU,WACVC,OAAQ,EACRC,OAA6B,EAArBJ,EAAMK,QAAQC,QAmCXP,CAAmB/B,gGC9CrBH,UAAS,SAAC0C,GAAD,MAAkB,CACtC9C,KAAM,SACNI,OAAQ0C,KCDJC,cACJ,SAAAA,EAAY/B,GAAO,IAAAJ,EAAA,OAAAX,OAAA+C,EAAA,EAAA/C,CAAAc,KAAAgC,IACjBnC,EAAAX,OAAAgD,EAAA,EAAAhD,CAAAc,KAAAd,OAAAiD,EAAA,EAAAjD,CAAA8C,GAAAI,KAAApC,KAAMC,KA0CRoC,yBAA2B,SAACC,EAAK/D,GAC/B,IAEMgE,GAFO,IAAIC,QAAaC,cAAcH,GAExBI,kBAAkB,IAAIF,UAClCG,EAAmBJ,EAAnBI,OAAQC,EAAWL,EAAXK,OAEhB/C,EAAKgD,SAASC,QACdjD,EAAKgD,SAASE,OAAOC,KAAKL,GAC1B9C,EAAKgD,SAASI,YAAc,EAAIL,EAEhC/C,EAAKqD,OAAOxB,SAASsB,KAAKL,EAAOQ,QAAQC,IAAI,IAAIZ,UAAc,EAAMI,GAAS,EAAMA,EAAQ,EAAMA,KAClG/C,EAAKqD,OAAOG,IAAM,GAAKT,EACvB/C,EAAKqD,OAAOI,yBAEZzD,EAAK0D,iBAAiB7B,SAASsB,KAAKL,EAAOQ,QAAQC,IAAI,IAAIZ,WAAe,IAAMI,GAAS,IAAMA,EAAQ,IAAMA,KAC7G/C,EAAK0D,iBAAiBC,OAAON,OAAOO,MAAMC,IAAI,GAAMd,EAAQ,GAAMA,EAAQ,IAAOA,GAE5E/C,EAAK8D,aACR9D,EAAK8D,WAAa,IAAInB,aAAiB,GACvC3C,EAAK8D,WAAWrE,KAAO,aACvBO,EAAK+D,MAAMR,IAAIvD,EAAK8D,aAGtB9D,EAAK8D,WAAWF,MAAMC,IAAId,EAAQA,EAAQA,GAC1C/C,EAAK8D,WAAWjC,SAASsB,KAAKL,GAE9B9C,EAAK0D,iBAAiBR,OAASlD,EAAK8D,WACpCpF,EAAcsF,SAASlB,OAASA,EAChCpE,EAAcsF,SAASjB,OAASA,GApEhC/C,EAAKiE,MAAQjE,EAAKiE,MAAMC,KAAX7E,OAAA8E,EAAA,EAAA9E,CAAAW,IACbA,EAAKoE,KAAOpE,EAAKoE,KAAKF,KAAV7E,OAAA8E,EAAA,EAAA9E,CAAAW,IACZA,EAAKqE,QAAUrE,EAAKqE,QAAQH,KAAb7E,OAAA8E,EAAA,EAAA9E,CAAAW,IACfA,EAAKsE,aAAe,sIACpBtE,EAAKjB,MAAQ,CACXwF,cAAe,EACfC,aAAc,KACdC,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,YACfnG,cAAe,IAAIiE,QAAa,CAAClD,KAAM,kBACvCd,aAAc,IAAIgE,QAAa,CAAClD,KAAM,iBACtCb,gBAAiB,IAAI+D,QAAa,CAAClD,KAAM,qBAd1BO,kFAmBA8E,EAAWC,EAAWC,GACvCC,QAAQC,IAAIJ,GACRA,EAAUK,iBAAqBhF,KAAKC,MAAM+E,2LAMvBC,IAAMC,IAAIlF,KAAKmE,qBAAhCgB,SACAC,EAAcD,EAASE,KAC7BrF,KAAKC,MAAMqF,SD1B0B,CACvCrG,KAAM,cACNP,OCwBmC0G,IACjCpF,KAAKuF,wJAGS,IAAAC,EAAAC,EAAAC,EACRN,EAAcpF,KAAKC,MAAM0F,MAAMjH,OAC/BkH,EAAYC,cAAYC,aAAaV,IAE3CI,EAAAxF,KAAKpB,MAAML,eAAc6E,IAAzB2C,MAAAP,EAAAtG,OAAA8G,EAAA,EAAA9G,CAAiC+G,iBAAeC,iBAAiBN,MACnEH,EAAAzF,KAAKpB,MAAMJ,cAAa4E,IAAxB2C,MAAAN,EAAAvG,OAAA8G,EAAA,EAAA9G,CAAgC+G,iBAAeE,gBAAgBnG,KAAKpB,MAAML,kBAC1EmH,EAAA1F,KAAKpB,MAAMH,iBAAgB2E,IAA3B2C,MAAAL,EAAAxG,OAAA8G,EAAA,EAAA9G,CAAmC+G,iBAAeG,YAAYR,KAC5D5F,KAAKqC,yBAAyBrC,KAAKpB,MAAMJ,aAAcwB,KAAKpB,MAAML,oMAmC5D+F,EAAQtE,KAAKqG,MAAMC,YACnB7B,EAASzE,KAAKqG,MAAME,aAEpB3C,EAAQ,IAAIpB,SACZU,EAAS,IAAIV,oBACjB,GACA8B,EAAQG,EACR,GACA,MAEK+B,GAAG9C,IAAK,EAAG,EAAG,GAEf+C,EAAW,IAAIjE,gBAAoB,CAAEkE,MAAO,EAAGC,WAAW,IAE1DC,EAAe,IAAIpE,eAAoB,SAC7CoB,EAAMR,IAAIwD,IAEJrD,EAAmB,IAAIf,mBAAwB,SAAU,IAC9CgB,OAAOqD,QAAQvC,MAAQ,KACxCf,EAAiBC,OAAOqD,QAAQpC,OAAS,KACzClB,EAAiBuD,YAAa,EAC9BlD,EAAMR,IAAIG,GAEJwD,EAAa,IAAIvE,aAAkB,SAAU,IAEnDU,EAAOE,IAAI2D,GAELpD,EAAanB,aAAkB,GACrCoB,EAAMR,IAAIO,GAEVT,EAAOxB,SAASsF,EAAI,EACpBpD,EAAMR,IAAIF,GAEVuD,EAASQ,QAAS1C,OAAOC,WAAaD,OAAOG,aAC7C+B,EAASS,UAAUC,SAAU,EAC7BV,EAASS,UAAUjI,KAAOuD,mBAEpB4E,EAAgBC,IAAkB7E,IAClCK,EAAW,IAAIuE,EAAelE,EAAQuD,EAASa,aAC5CC,YAAa,EAGtBvH,KAAK6C,SAAWA,EAChB7C,KAAKuD,iBAAmBA,EACxBvD,KAAK4D,MAAQA,EACb5D,KAAKkD,OAASA,EACdlD,KAAKyG,SAAWA,YAGVzG,KAAKwH,0BACX1C,QAAQC,IAAI/E,KAAKpB,MAAML,cAAckJ,SAAS,GAAG5D,UAEjD7D,KAAK6C,SAAS6E,SACd1H,KAAKqG,MAAMsB,YAAY3H,KAAKyG,SAASa,YACrCtH,KAAK8D,0JAIL9D,KAAKiE,OACLjE,KAAKqG,MAAMuB,YAAY5H,KAAKyG,SAASa,4CAIhCtH,KAAK6H,UACR7H,KAAK6H,QAAUC,sBAAsB9H,KAAKkE,yCAK5C6D,qBAAqB/H,KAAK6H,2CAK1B7H,KAAK4D,MAAMoE,OAAOhI,KAAKpB,MAAML,eAC7ByB,KAAK4D,MAAMoE,OAAOhI,KAAKpB,MAAMJ,cAC7BwB,KAAK4D,MAAMoE,OAAOhI,KAAKpB,MAAMH,iBAGzBuB,KAAKC,MAAM0F,MAAMpH,eACnByB,KAAK4D,MAAMR,IAAIpD,KAAKpB,MAAML,eAEzByB,KAAKC,MAAM0F,MAAMnH,cAClBwB,KAAK4D,MAAMR,IAAIpD,KAAKpB,MAAMJ,cAExBwB,KAAKC,MAAM0F,MAAMlH,iBACnBuB,KAAK4D,MAAMR,IAAIpD,KAAKpB,MAAMH,iBAG5BuB,KAAKiI,cACLjI,KAAK6H,QAAUtD,OAAOuD,sBAAsB9H,KAAKkE,+CAIjDlE,KAAKyG,SAASyB,OAAOlI,KAAK4D,MAAO5D,KAAKkD,yCAG/B,IAAAiF,EAAAnI,KACP,OACEE,EAAAC,EAAAC,cAAA,OAEEgI,MAAO,CAAC1G,SAAS,WAAY2G,KAAK,EAAGC,IAAI,EAAEhE,MAAK,GAAAiE,OAAKhE,OAAOC,WAAW,IAAvB,MAAgCC,OAAM,GAAA8D,OAAKhE,OAAOG,YAAY,IAAxB,MAAiC/C,OAAQ,GAC/H6G,IAAK,SAACnC,GAAY8B,EAAK9B,MAAQA,GAC/BoC,OAAQzI,KAAKC,MAAM0F,eAnLPtE,IAAMC,WAiMXoH,cARS,SAAC9J,GAEvB,OADAkG,QAAQC,IAAI,SACL,CACLY,MAAO/G,EAAM+G,QAKF+C,CAAyB1G,4RC7HzB0G,eAbS,SAAA9J,GAAK,MAAK,CAChCL,cAAeK,EAAM+G,MAAMpH,cAC3BC,aAAcI,EAAM+G,MAAMnH,aAC1BC,gBAAiBG,EAAM+G,MAAMlH,kBAGJ,SAAA6G,GAAQ,MAAK,CACtCqD,aAAc,SAAAC,GAAC,OAAItD,EAASjG,EAAO,CAAEC,KAAM,gBAAiBC,KAAMqJ,EAAE7F,OAAO8F,YAC3EC,YAAa,SAAAF,GAAC,OAAItD,EAASjG,EAAO,CAAEC,KAAM,eAAgBC,KAAMqJ,EAAE7F,OAAO8F,YACzEE,eAAgB,SAAAH,GAAC,OAAItD,EAASjG,EAAO,CAAEC,KAAM,kBAAmBC,KAAMqJ,EAAE7F,OAAO8F,cAIlEH,CA5DO,SAAAM,GAAA,IAAEzK,EAAFyK,EAAEzK,cAAeC,EAAjBwK,EAAiBxK,aAAcC,EAA/BuK,EAA+BvK,gBAAiBkK,EAAhDK,EAAgDL,aAAcG,EAA9DE,EAA8DF,YAAaC,EAA3EC,EAA2ED,eAA3E,OACpB7I,EAAAC,EAAAC,cAAC6I,GAAA9I,EAAD,KACAD,EAAAC,EAAAC,cAAC8I,GAAA/I,EAAD,CAAuBgJ,WAAYjJ,EAAAC,EAAAC,cAACgJ,GAAAjJ,EAAD,OACjCD,EAAAC,EAAAC,cAACiJ,GAAAlJ,EAAD,iBAEFD,EAAAC,EAAAC,cAACkJ,GAAAnJ,EAAD,KACAD,EAAAC,EAAAC,cAACmJ,GAAApJ,EAAD,KACED,EAAAC,EAAAC,cAACoJ,GAAArJ,EAAD,KACED,EAAAC,EAAAC,cAACqJ,GAAAtJ,EAAD,CACIuJ,QACAxJ,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CACI0I,QAAStK,EACT+B,SAAUqI,EACVlJ,MAAM,kBAGVoB,MAAM,oBAGZX,EAAAC,EAAAC,cAACoJ,GAAArJ,EAAD,KACAD,EAAAC,EAAAC,cAACqJ,GAAAtJ,EAAD,CACEuJ,QACExJ,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CACE0I,QAASrK,EACT8B,SAAUwI,EACVrJ,MAAM,iBAGVoB,MAAM,mBAGRX,EAAAC,EAAAC,cAACoJ,GAAArJ,EAAD,KACAD,EAAAC,EAAAC,cAACqJ,GAAAtJ,EAAD,CACEuJ,QACExJ,EAAAC,EAAAC,cAACuJ,GAAAxJ,EAAD,CACE0I,QAASpK,EACT6B,SAAUyI,EACVtJ,MAAM,oBAGVoB,MAAM,2BCYGU,wBAvDA,SAAAC,GAAK,MAAK,CACvBoI,KAAM,CACJC,QAAS,OACTlI,OAAQH,EAAMG,OAAOmI,OAAS,GAEhCC,KAAM,CACJF,QAAS,QAEXG,OAAQ,CACN1F,MAXgB,IAYhB2F,WAAY,GAEdC,YAAa,CACX5F,MAfgB,KAiBlB6F,aAAajL,OAAAC,EAAA,EAAAD,CAAA,CACX2K,QAAS,OACTO,WAAY,SACZC,QAAS,SACN7I,EAAM8I,OAAOC,QAJN,CAKVC,eAAgB,eAmCc,CAAEC,WAAW,GAAhClJ,CA/Bc,SAACtB,GAAU,IAC5BF,EAAyBE,EAAzBF,QAASyB,EAAgBvB,EAAhBuB,MAAOkJ,EAASzK,EAATyK,KAExB,OACExK,EAAAC,EAAAC,cAAA,OAAKG,UAAWR,EAAQ6J,KAAMjI,OAAQH,EAAMG,OAAOmI,OAAO,GACxD5J,EAAAC,EAAAC,cAACuK,EAAAxK,EAAD,CACEI,UAAWR,EAAQiK,OACnBY,OAAO,OACPF,KAAMA,EACN3K,QAAS,CACP8K,MAAO9K,EAAQmK,aAEjBY,QAAS7K,EAAM8K,cAEf7K,EAAAC,EAAAC,cAAA,OAAKG,UAAWR,EAAQoK,cACtBjK,EAAAC,EAAAC,cAAC4K,GAAA7K,EAAD,CAAYgB,QAASlB,EAAM8K,cACJ,QAApBvJ,EAAMyJ,UAAsB/K,EAAAC,EAAAC,cAAC8K,GAAA/K,EAAD,MAAsBD,EAAAC,EAAAC,cAAC+K,GAAAhL,EAAD,QAGvDD,EAAAC,EAAAC,cAACgL,EAAAjL,EAAD,MACAD,EAAAC,EAAAC,cAACiL,GAAD,yECNK9J,4BA1CA,SAAAC,GAAK,MAAK,CACvBoI,KAAM,CACJ0B,SAAU,GAEZC,KAAM,CACJD,SAAU,GAEZxB,OAAQ,CACNnI,OAAQ,OACRD,SAAU,YAEZ8J,WAAY,CACVC,YAAa,GACbC,YAAa,MA6BiB,CAACjB,WAAW,GAA/BlJ,CAzBf,SAAsBtB,GAAO,IACnBF,EAAYE,EAAZF,QAER,OACEG,EAAAC,EAAAC,cAACuL,GAAAxL,EAAD,CAAQI,UAAWR,EAAQ+J,QACzB5J,EAAAC,EAAAC,cAACwL,GAAAzL,EAAD,KACED,EAAAC,EAAAC,cAAC4K,GAAA7K,EAAD,CAAYI,UAAWR,EAAQyL,WAAYK,MAAM,UAAUC,aAAW,OAAO3K,QAASlB,EAAM8K,cAC1F7K,EAAAC,EAAAC,cAAC2L,GAAA5L,EAAD,OAEFD,EAAAC,EAAAC,cAACiJ,GAAAlJ,EAAD,CAAY6L,QAAQ,KAAKH,MAAM,UAAUtL,UAAWR,EAAQwL,MAA5D,UAGArL,EAAAC,EAAAC,cAACiJ,GAAAlJ,EAAD,CAAY6L,QAAQ,KAAKH,MAAM,UAAUtL,UAAWR,EAAQwL,MAA5D,iJC7BaU,8MAEnBrN,MAAQ,CACNsN,KAAM,QAIRC,eAAiB,SAACvD,GAChBA,EAAEwD,iBACFvM,EAAKI,MAAMmB,wFAGJwH,GAAG,IAAAT,EAAAnI,KACJkM,EAAOtD,EAAE7F,OAAOsJ,MAAM,GACtBC,EAAS,IAAIC,WACnBD,EAAOE,kBAAkBN,GAEzBpH,QAAQC,IAAImH,GACZI,EAAOG,OAAS,SAAC7D,GACf,IAAMvD,EAAOiH,EAAOI,OACdC,EAAU,IAAIC,YACpBzE,EAAKrI,SAAS,CAACoM,KAAMS,EAAQE,OAAOxH,uCAKtC,OACEnF,EAAAC,EAAAC,cAAC0M,GAAA3M,EAAD,CACEuK,KAAM1K,KAAKC,MAAMyK,KACjBI,QAAS9K,KAAKC,MAAMmB,aACpB2L,kBAAgB,qBAEhB7M,EAAAC,EAAAC,cAAC4M,GAAA7M,EAAD,CAAa8M,GAAG,qBAAhB,eACA/M,EAAAC,EAAAC,cAAA,QAAM8M,SAAUlN,KAAKmM,eAAepI,KAAK/D,OACzCE,EAAAC,EAAAC,cAAC+M,GAAAhN,EAAD,KACED,EAAAC,EAAAC,cAACgN,GAAAjN,EAAD,8IAGAD,EAAAC,EAAAC,cAAA,SAAOnB,KAAK,OAAOqB,SAAUN,KAAKM,SAASyD,KAAK/D,SAElDE,EAAAC,EAAAC,cAACiN,GAAAlN,EAAD,KACED,EAAAC,EAAAC,cAACkN,GAAAnN,EAAD,CAAQgB,QAASnB,KAAKC,MAAMmB,aAAcyK,MAAM,WAAhD,UAGA3L,EAAAC,EAAAC,cAACkN,GAAAnN,EAAD,CAAQlB,KAAK,SAAS4M,MAAM,WAA5B,oBA5C8BxK,IAAMC,gCCQxCiM,GCbUC,YACZC,YAAgB,CACd9H,MAAO+H,IAETnJ,OAAOoJ,8BAAgCpJ,OAAOoJ,gCD4CnCC,8MAhCbhP,MAAQ,CACNoL,QAAQ,EACRtK,QAAQ,iFAIRM,KAAKF,SAAS,CAACkK,QAAShK,KAAKpB,MAAMoL,gDAInChK,KAAKF,SAAS,CAACJ,QAASM,KAAKpB,MAAMc,0CAInC,OACEQ,EAAAC,EAAAC,cAACyN,EAAA,EAAD,CAAUN,MAAOA,IAEfrN,EAAAC,EAAAC,cAAC0N,GAAA3N,EAAD,MACAD,EAAAC,EAAAC,cAAC2N,GAAD,CAAQhD,aAAc/K,KAAK+K,aAAahH,KAAK/D,QAC7CE,EAAAC,EAAAC,cAAC4N,GAAD,CAAQtD,KAAM1K,KAAKpB,MAAMoL,OAAQe,aAAc/K,KAAK+K,aAAahH,KAAK/D,QAEtEE,EAAAC,EAAAC,cAAC6N,EAAD,MAEA/N,EAAAC,EAAAC,cAAC8N,EAAD,CAAW9M,aAAcpB,KAAKoB,aAAa2C,KAAK/D,QAGhDE,EAAAC,EAAAC,cAAC+N,GAAD,CAAczD,KAAM1K,KAAKpB,MAAMc,OAAQ0B,aAAcpB,KAAKoB,aAAa2C,KAAK/D,gBA3BlEsB,aEPE8M,QACW,cAA7B7J,OAAO8J,SAASC,UAEe,UAA7B/J,OAAO8J,SAASC,UAEhB/J,OAAO8J,SAASC,SAASC,MACvB,2DCZNC,IAAStG,OAAOhI,EAAAC,EAAAC,cAACqO,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9f124c50.chunk.js","sourcesContent":["// gbXML Reducer\n\nconst gbXMLDefaultState = {\n  surfaceMeshes: true,\n  surfaceEdges: true,\n  surfaceOpenings: true,\n  string: null\n}\n\nexport default (state = gbXMLDefaultState, action) => {\n  switch (action.type) {\n    case 'TOGGLE':\n      return {\n        ...state,\n        [action.toggle.name]: action.toggle.bool\n      }\n\n    case 'LOAD_STRING':\n      return {\n        ...state,\n        string: action.string\n      }\n\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport Icon from '@material-ui/core/Icon';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = theme => ({\n  background: {\n    backgroundColor: '#fafafa',\n  },\n  absolute: {\n    position: 'absolute',\n    zIndex: 1,\n    bottom: theme.spacing.unit * 3,\n  },\n});\n\nclass LabelBottomNavigation extends React.Component {\n  state = {\n    value: 'recents',\n    upload: false,\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n\n    return (\n      <BottomNavigation value={value} onChange={this.handleChange} className={classes.background}>\n        <Paper className={classes.absolute} elevation={2}>\n          <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\n          <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\n          <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\n          <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<Icon>folder</Icon>} onClick={this.props.toggleUpload}/>\n        </Paper>\n      </BottomNavigation>\n    );\n  }\n}\n\nLabelBottomNavigation.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(LabelBottomNavigation);","import uuid from 'uuid';\n\n// Increment gbXML count\nexport const increment = () => ({\n  type: 'INCREMENT'\n})\n\nexport const toggle = (toggleState) => ({\n  type: 'TOGGLE',\n  toggle: toggleState\n})\n\nexport const updateString = (string) => ({\n  type: 'LOAD_STRING',\n  string\n})\n\n// ADD_EXPENSE\nexport const addExpense = (\n  {\n    description = '',\n    note = '',\n    amount = 0,\n    createdAt = 0\n  } = {}\n) => ({\n  type: 'ADD_EXPENSE',\n  expense: {\n    id: uuid(),\n    description,\n    note,\n    amount,\n    createdAt\n  }\n});\n\n// REMOVE_EXPENSE\nexport const removeExpense = ({ id } = {}) => ({\n  type: 'REMOVE_EXPENSE',\n  id\n});\n\n// EDIT_EXPENSE\nexport const editExpense = (id, updates) => ({\n  type: 'EDIT_EXPENSE',\n  id,\n  updates\n});\n","import React from 'react';\nimport * as THREE from 'three';\nimport OrbitControlsDef from 'three-orbit-controls'\nimport { connect } from 'react-redux';\nimport { gbXMLParser, threeGenerator } from '@ladybug-tools/spider-core'\nimport axios from 'axios';\nimport { updateString } from '../actions/gbmxl'\n\nclass Scene extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.start = this.start.bind(this)\n    this.stop = this.stop.bind(this)\n    this.animate = this.animate.bind(this)\n    this.defaultgbXML = 'https://raw.githubusercontent.com/ladybug-tools/spider/5b4575f2d1905e1aedf282603fc4155bb679ba18/read-gbxml/data-files/sam-live2.xml'\n    this.state = {\n      sceneRotation: 1,\n      cameraHelper: null,\n      width: window.innerWidth,\n      height: window.innerHeight,\n      surfaceMeshes: new THREE.Group( {name: 'surfaceMeshes'} ),\n      surfaceEdges: new THREE.Group( {name: 'surfaceEdges'} ),\n      surfaceOpenings: new THREE.Group( {name: 'surfaceOpenings'} ),\n  \n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log(prevProps)\n    if (prevProps.specificProperty !== this.props.specificProperty) {\n        // Do whatever you want\n    }\n  }\n\n  async loadDefaultFile () {\n    const response = await axios.get(this.defaultgbXML);\n    const gbxmlString = response.data;\n    this.props.dispatch(updateString(gbxmlString))\n    this.gbxmlToThree()\n  }\n\n  gbxmlToThree () {\n    const gbxmlString = this.props.gbxml.string;\n    const gbXMLJson = gbXMLParser.parseFileXML(gbxmlString);\n\n    this.state.surfaceMeshes.add( ...threeGenerator.getSurfaceMeshes(gbXMLJson) );\n\t\tthis.state.surfaceEdges.add( ...threeGenerator.getSurfaceEdges(this.state.surfaceMeshes) );\n\t\tthis.state.surfaceOpenings.add( ...threeGenerator.getOpenings(gbXMLJson) );\n    this.zoomObjectBoundingSphere(this.state.surfaceEdges, this.state.surfaceMeshes)\n  }\n\n  zoomObjectBoundingSphere = (obj, surfaceMeshes) => {\n    const bbox = new THREE.Box3().setFromObject(obj);\n  \n    const sphere = bbox.getBoundingSphere(new THREE.Sphere());\n    const { center, radius } = sphere;\n  \n    this.controls.reset();\n    this.controls.target.copy(center);\n    this.controls.maxDistance = 5 * radius;\n  \n    this.camera.position.copy(center.clone().add(new THREE.Vector3(1.0 * radius, -1.0 * radius, 1.0 * radius)));\n    this.camera.far = 10 * radius; // 2 * camera.position.length();\n    this.camera.updateProjectionMatrix();\n  \n    this.lightDirectional.position.copy(center.clone().add(new THREE.Vector3(-1.5 * radius, -1.5 * radius, 1.5 * radius)));\n    this.lightDirectional.shadow.camera.scale.set(0.2 * radius, 0.2 * radius, 0.01 * radius);\n  \n    if (!this.axesHelper) {\n      this.axesHelper = new THREE.AxesHelper(1);\n      this.axesHelper.name = 'axesHelper';\n      this.scene.add(this.axesHelper);\n    }\n  \n    this.axesHelper.scale.set(radius, radius, radius);\n    this.axesHelper.position.copy(center);\n  \n    this.lightDirectional.target = this.axesHelper;\n    surfaceMeshes.userData.center = center;\n    surfaceMeshes.userData.radius = radius;\n  };\n\n  async componentDidMount() {\n    const width = this.mount.clientWidth\n    const height = this.mount.clientHeight\n\n    const scene = new THREE.Scene()\n    const camera = new THREE.PerspectiveCamera(\n      40,\n      width / height,\n      0.1,\n      1000\n    )\n    camera.up.set( 0, 0, 1 );\n\n    const renderer = new THREE.WebGLRenderer({ alpha: 1, antialias: true })\n\n    const lightAmbient = new THREE.AmbientLight( 0x444444 );\n    scene.add(lightAmbient)\n\n    const lightDirectional = new THREE.DirectionalLight( 0xffffff, 1);\n    lightDirectional.shadow.mapSize.width = 2048;  // default 512\n    lightDirectional.shadow.mapSize.height = 2048;\n    lightDirectional.castShadow = true;\n    scene.add(lightDirectional);\n\n    const lightPoint = new THREE.PointLight( 0xffffff, 0.5 );\n    // lightPoint.position = new THREE.Vector3( 0, 0, 1 ); TODO: Error about lightPoint not having position property\n    camera.add(lightPoint)\n\n    const axesHelper = THREE.AxesHelper( 1 );\n    scene.add(axesHelper)\n\n    camera.position.z = 4\n    scene.add(camera)\n\n    renderer.setSize( window.innerWidth,  window.innerHeight)\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap; \n    \n    const OrbitControls = OrbitControlsDef( THREE )\n    const controls = new OrbitControls( camera, renderer.domElement )\n    controls.autoRotate = false\n\n\n    this.controls = controls\n    this.lightDirectional = lightDirectional\n    this.scene = scene\n    this.camera = camera\n    this.renderer = renderer\n\n    // Load the default GBXML file\n    await this.loadDefaultFile();\n    console.log(this.state.surfaceMeshes.children[0].userData);\n\n    this.controls.update()\n    this.mount.appendChild(this.renderer.domElement)\n    this.start()\n  }\n\n  componentWillUnmount() {\n    this.stop()\n    this.mount.removeChild(this.renderer.domElement)\n  }\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate)\n    }\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId)\n  }\n\n  animate() {\n    // this.gbxmlToThree()\n    this.scene.remove(this.state.surfaceMeshes)\n    this.scene.remove(this.state.surfaceEdges)\n    this.scene.remove(this.state.surfaceOpenings)\n\n\n    if (this.props.gbxml.surfaceMeshes) {\n      this.scene.add(this.state.surfaceMeshes)\n    }\n    if(this.props.gbxml.surfaceEdges) {\n      this.scene.add(this.state.surfaceEdges)\n    }\n    if (this.props.gbxml.surfaceOpenings) {\n      this.scene.add(this.state.surfaceOpenings)\n    }\n\n    this.renderScene()\n    this.frameId = window.requestAnimationFrame(this.animate)\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera)\n  }\n\n  render() {\n    return (\n      <div\n        // style={{ width: `${window.innerWidth-200}px`, height: `${window.innerHeight-200}px`, \"z-index\": 3 }}\n        style={{position:'relative', left:0, top:0,width: `${window.innerWidth-200}px`, height: `${window.innerHeight-200}px`, zIndex: 0}}\n        ref={(mount) => { this.mount = mount }}\n        status={this.props.gbxml}\n      />\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log('STATE')\n  return {\n    gbxml: state.gbxml\n  };\n};\n\n\nexport default connect(mapStateToProps)(Scene);","import React from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { connect } from 'react-redux';\nimport { toggle } from '../actions/gbmxl';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nconst SwitchesGroup = ({surfaceMeshes, surfaceEdges, surfaceOpenings, toggleMeshes, toggleEdges, toggleOpenings}) => (\n  <ExpansionPanel>\n  <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n    <Typography >Toggles</Typography>\n  </ExpansionPanelSummary>\n  <ExpansionPanelDetails>\n  <List>\n    <ListItem>\n      <FormControlLabel\n          control={\n          <Switch\n              checked={surfaceMeshes}\n              onChange={toggleMeshes}\n              value=\"surfaceMeshes\"\n          />\n          }\n          label=\"Surface Meshes\"\n      />\n    </ListItem>\n    <ListItem>\n    <FormControlLabel\n      control={\n        <Switch\n          checked={surfaceEdges}\n          onChange={toggleEdges}\n          value=\"surfaceEdges\"\n        />\n      }\n      label=\"Surface Edges\"\n    />\n    </ListItem>      \n    <ListItem>\n    <FormControlLabel\n      control={\n        <Switch\n          checked={surfaceOpenings}\n          onChange={toggleOpenings}\n          value=\"surfaceOpenings\"\n        />\n      }\n      label=\"Surface Openings\"\n    />\n    </ListItem>          \n  </List>\n  </ExpansionPanelDetails>\n  </ExpansionPanel>\n)\nconst mapStateToProps = state => ({\n  surfaceMeshes: state.gbxml.surfaceMeshes,\n  surfaceEdges: state.gbxml.surfaceEdges,\n  surfaceOpenings: state.gbxml.surfaceOpenings,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleMeshes: e => dispatch(toggle({ name: 'surfaceMeshes', bool: e.target.checked })),\n  toggleEdges: e => dispatch(toggle({ name: 'surfaceEdges', bool: e.target.checked })),\n  toggleOpenings: e => dispatch(toggle({ name: 'surfaceOpenings', bool: e.target.checked })),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SwitchesGroup);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport SwitchGroup from './SwitchGroup'\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    zIndex: theme.zIndex.appBar - 1,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n});\n\nconst PersistentDrawerLeft = (props) => {\n    const { classes, theme, open } = props;\n\n    return (\n      <div className={classes.root} zIndex={theme.zIndex.appBar-1}>\n        <Drawer\n          className={classes.drawer}\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n          onClose={props.toggleDrawer}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={props.toggleDrawer}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <Divider />\n          <SwitchGroup />\n        </Drawer>\n      </div>\n    );\n  }\n\nPersistentDrawerLeft.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  appBar: {\n    zIndex: '1400',\n    position: 'relative'\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n});\n\nfunction ButtonAppBar(props) {\n  const { classes } = props;\n\n  return (\n    <AppBar className={classes.appBar}>\n      <Toolbar>\n        <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" onClick={props.toggleDrawer}>\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n          Spider \n        </Typography>\n        <Typography variant=\"h7\" color=\"inherit\" className={classes.grow}>\n          gbXML Viewer \n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, {withTheme: true})(ButtonAppBar);","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n\nexport default class FormDialog extends React.Component {\n\n  state = {\n    file: null\n  };\n\n\n  handleFileRead = (e) => {\n    e.preventDefault()\n    this.props.toggleUpload()\n  }\n\n  onChange(e) {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.readAsArrayBuffer(file);\n\n    console.log(file)\n    reader.onload = (e) => {\n      const data = reader.result;\n      const decoder = new TextDecoder()\n      this.setState({file: decoder.decode(data)})\n    }\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.toggleUpload}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Upload File</DialogTitle>\n        <form onSubmit={this.handleFileRead.bind(this)}>\n        <DialogContent>\n          <DialogContentText>\n            Upload a file to the viewer from your local machine or an appropriate file reachable through download (eg: a github gist or raw file)\n          </DialogContentText>\n          <input type=\"file\" onChange={this.onChange.bind(this)} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.props.toggleUpload} color=\"primary\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" color=\"primary\">\n            Upload\n          </Button>\n        </DialogActions>\n        </form>\n      </Dialog>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport BottomNav from './components/BottomNav';\nimport Renderer from './components/Renderer';\n// import Drawer from './components/Drawer'\nimport Drawer from './components/DrawerFunction'\nimport AppBar from './components/AppBar'\nimport UploadDialog from './components/UploadDialog';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\n\n// import theme from './ui/theme/index';\n// import './styles.css'\n\n\nconst store = configureStore();\n\nclass App extends Component {\n  state = {\n    drawer: false,\n    upload: false,\n  }\n\n  toggleDrawer() {\n    this.setState({drawer: !this.state.drawer})\n  }\n\n  toggleUpload() {\n    this.setState({upload: !this.state.upload})\n  }\n\n  render() {\n    return (\n      <Provider store={store}>\n      {/* <MuiThemeProvider theme={theme}> */}\n        <CssBaseline />\n        <AppBar toggleDrawer={this.toggleDrawer.bind(this)}/>\n        <Drawer open={this.state.drawer} toggleDrawer={this.toggleDrawer.bind(this)}/>\n        {/* <SwitchGroup /> */}\n        <Renderer />\n        {/* <Tooltip /> */}\n        <BottomNav toggleUpload={this.toggleUpload.bind(this)}/>\n        {/* <Drawer /> */}\n        {/* </MuiThemeProvider> */}\n        <UploadDialog open={this.state.upload} toggleUpload={this.toggleUpload.bind(this)}/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers } from 'redux';\nimport gbxmlReducer from '../reducers/gbmxl'\n\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      gbxml: gbxmlReducer\n    }),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}